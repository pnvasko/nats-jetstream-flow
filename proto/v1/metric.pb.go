// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: proto/v1/metric.proto

package proto

import (
	_ "github.com/planetscale/vtprotobuf/vtproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processed uint64 `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`               // counter
	InFlight  int64  `protobuf:"varint,2,opt,name=in_flight,json=inFlight,proto3" json:"in_flight,omitempty"` // gauge
	Failed    uint64 `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`                     // counter
}

func (x *BaseMetric) Reset() {
	*x = BaseMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_metric_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMetric) ProtoMessage() {}

func (x *BaseMetric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_metric_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseMetric.ProtoReflect.Descriptor instead.
func (*BaseMetric) Descriptor() ([]byte, []int) {
	return file_proto_v1_metric_proto_rawDescGZIP(), []int{0}
}

func (x *BaseMetric) GetProcessed() uint64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *BaseMetric) GetInFlight() int64 {
	if x != nil {
		return x.InFlight
	}
	return 0
}

func (x *BaseMetric) GetFailed() uint64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type MapMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overall *BaseMetric            `protobuf:"bytes,1,opt,name=overall,proto3" json:"overall,omitempty"`
	Boards  map[uint64]*BaseMetric `protobuf:"bytes,2,rep,name=boards,proto3" json:"boards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapMetric) Reset() {
	*x = MapMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_metric_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapMetric) ProtoMessage() {}

func (x *MapMetric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_metric_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapMetric.ProtoReflect.Descriptor instead.
func (*MapMetric) Descriptor() ([]byte, []int) {
	return file_proto_v1_metric_proto_rawDescGZIP(), []int{1}
}

func (x *MapMetric) GetOverall() *BaseMetric {
	if x != nil {
		return x.Overall
	}
	return nil
}

func (x *MapMetric) GetBoards() map[uint64]*BaseMetric {
	if x != nil {
		return x.Boards
	}
	return nil
}

var File_proto_v1_metric_proto protoreflect.FileDescriptor

var file_proto_v1_metric_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6e, 0x61, 0x74, 0x73, 0x5f, 0x6a, 0x65,
	0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x64, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2f,
	0x76, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x40, 0x76, 0x30, 0x2e, 0x36, 0x2e,
	0x30, 0x2f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x74, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x2f, 0x76, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a,
	0x0a, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x5f,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x3a, 0x04,
	0xa8, 0xa6, 0x1f, 0x01, 0x22, 0x87, 0x02, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x44, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x5f, 0x6a, 0x65, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x07, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x12, 0x4d, 0x0a, 0x06, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x5f,
	0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x65, 0x0a, 0x0b, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x61, 0x74, 0x73, 0x5f, 0x6a,
	0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2e,
	0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6e, 0x76,
	0x61, 0x73, 0x6b, 0x6f, 0x2f, 0x6e, 0x61, 0x74, 0x73, 0x2d, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2d, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_metric_proto_rawDescOnce sync.Once
	file_proto_v1_metric_proto_rawDescData = file_proto_v1_metric_proto_rawDesc
)

func file_proto_v1_metric_proto_rawDescGZIP() []byte {
	file_proto_v1_metric_proto_rawDescOnce.Do(func() {
		file_proto_v1_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_metric_proto_rawDescData)
	})
	return file_proto_v1_metric_proto_rawDescData
}

var file_proto_v1_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_v1_metric_proto_goTypes = []interface{}{
	(*BaseMetric)(nil), // 0: nats_jetstream_flow.metrics.v1.BaseMetric
	(*MapMetric)(nil),  // 1: nats_jetstream_flow.metrics.v1.MapMetric
	nil,                // 2: nats_jetstream_flow.metrics.v1.MapMetric.BoardsEntry
}
var file_proto_v1_metric_proto_depIdxs = []int32{
	0, // 0: nats_jetstream_flow.metrics.v1.MapMetric.overall:type_name -> nats_jetstream_flow.metrics.v1.BaseMetric
	2, // 1: nats_jetstream_flow.metrics.v1.MapMetric.boards:type_name -> nats_jetstream_flow.metrics.v1.MapMetric.BoardsEntry
	0, // 2: nats_jetstream_flow.metrics.v1.MapMetric.BoardsEntry.value:type_name -> nats_jetstream_flow.metrics.v1.BaseMetric
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_v1_metric_proto_init() }
func file_proto_v1_metric_proto_init() {
	if File_proto_v1_metric_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_metric_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_metric_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_metric_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_v1_metric_proto_goTypes,
		DependencyIndexes: file_proto_v1_metric_proto_depIdxs,
		MessageInfos:      file_proto_v1_metric_proto_msgTypes,
	}.Build()
	File_proto_v1_metric_proto = out.File
	file_proto_v1_metric_proto_rawDesc = nil
	file_proto_v1_metric_proto_goTypes = nil
	file_proto_v1_metric_proto_depIdxs = nil
}
